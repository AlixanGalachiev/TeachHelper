"""base

Revision ID: 96df782805c7
Revises: 
Create Date: 2025-10-14 12:25:05.561271

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96df782805c7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('errorcomment',
    sa.Column('type', sa.Enum('Spelling', 'Grammar', 'Punctuation', 'Speech', 'Stylistic', 'Graphic', 'Factual', 'Logical', name='errortype'), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('work_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_errorcomment_id'), 'errorcomment', ['id'], unique=False)
    op.create_table('subscription',
    sa.Column('type', sa.Enum('free', 'mininal', 'medium', 'max', name='subscriptiontype'), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_id'), 'subscription', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_type'), 'subscription', ['type'], unique=False)
    op.create_table('user',
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('teacher', 'student', 'admin', name='roleuser'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('classroom',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classroom_id'), 'classroom', ['id'], unique=False)
    op.create_table('task',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('dictation', 'copying', 'exposition', 'composition', name='tasktype'), nullable=False),
    sa.Column('files', sa.String(length=250), nullable=True),
    sa.Column('max_point', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_created_at'), 'task', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_deadline'), 'task', ['deadline'], unique=False)
    op.create_index(op.f('ix_task_id'), 'task', ['id'], unique=False)
    op.create_index(op.f('ix_task_name'), 'task', ['name'], unique=False)
    op.create_index(op.f('ix_task_type'), 'task', ['type'], unique=False)
    op.create_table('work',
    sa.Column('status', sa.Enum('draft', 'in_work', 'on_checking', 'checked', 'archived', name='workstatus'), nullable=False),
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('finish_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('teacher_comment', sa.String(length=250), nullable=True),
    sa.Column('verifed_by_ai', sa.Boolean(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_work_finish_date'), 'work', ['finish_date'], unique=False)
    op.create_index(op.f('ix_work_id'), 'work', ['id'], unique=False)
    op.create_index(op.f('ix_work_status'), 'work', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_status'), table_name='work')
    op.drop_index(op.f('ix_work_id'), table_name='work')
    op.drop_index(op.f('ix_work_finish_date'), table_name='work')
    op.drop_table('work')
    op.drop_index(op.f('ix_task_type'), table_name='task')
    op.drop_index(op.f('ix_task_name'), table_name='task')
    op.drop_index(op.f('ix_task_id'), table_name='task')
    op.drop_index(op.f('ix_task_deadline'), table_name='task')
    op.drop_index(op.f('ix_task_created_at'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_classroom_id'), table_name='classroom')
    op.drop_table('classroom')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_subscription_type'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_index(op.f('ix_errorcomment_id'), table_name='errorcomment')
    op.drop_table('errorcomment')
    # ### end Alembic commands ###
